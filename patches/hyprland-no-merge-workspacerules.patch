diff --git a/src/config/ConfigManager.cpp b/src/config/ConfigManager.cpp
index ea79f614..24f7b496 100644
--- a/src/config/ConfigManager.cpp
+++ b/src/config/ConfigManager.cpp
@@ -1298,41 +1298,24 @@ SWorkspaceRule CConfigManager::getWorkspaceRuleFor(PHLWORKSPACE pWorkspace) {
 SWorkspaceRule CConfigManager::mergeWorkspaceRules(const SWorkspaceRule& rule1, const SWorkspaceRule& rule2) {
     SWorkspaceRule mergedRule = rule1;
 
-    if (rule1.monitor.empty())
-        mergedRule.monitor = rule2.monitor;
-    if (rule1.workspaceString.empty())
-        mergedRule.workspaceString = rule2.workspaceString;
-    if (rule1.workspaceName.empty())
-        mergedRule.workspaceName = rule2.workspaceName;
-    if (rule1.workspaceId == WORKSPACE_INVALID)
-        mergedRule.workspaceId = rule2.workspaceId;
-
-    if (rule2.isDefault)
-        mergedRule.isDefault = true;
-    if (rule2.isPersistent)
-        mergedRule.isPersistent = true;
-    if (rule2.gapsIn.has_value())
-        mergedRule.gapsIn = rule2.gapsIn;
-    if (rule2.gapsOut.has_value())
-        mergedRule.gapsOut = rule2.gapsOut;
-    if (rule2.borderSize.has_value())
-        mergedRule.borderSize = rule2.borderSize;
-    if (rule2.noBorder.has_value())
-        mergedRule.noBorder = rule2.noBorder;
-    if (rule2.noRounding.has_value())
-        mergedRule.noRounding = rule2.noRounding;
-    if (rule2.decorate.has_value())
-        mergedRule.decorate = rule2.decorate;
-    if (rule2.noShadow.has_value())
-        mergedRule.noShadow = rule2.noShadow;
-    if (rule2.onCreatedEmptyRunCmd.has_value())
-        mergedRule.onCreatedEmptyRunCmd = rule2.onCreatedEmptyRunCmd;
-    if (rule2.defaultName.has_value())
-        mergedRule.defaultName = rule2.defaultName;
-    if (!rule2.layoutopts.empty()) {
-        for (const auto& layoutopt : rule2.layoutopts) {
-            mergedRule.layoutopts[layoutopt.first] = layoutopt.second;
-        }
+    mergedRule.monitor = rule2.monitor;
+    mergedRule.workspaceString = rule2.workspaceString;
+    mergedRule.workspaceName = rule2.workspaceName;
+    mergedRule.workspaceId = rule2.workspaceId;
+
+    mergedRule.isDefault = rule2.isDefault;
+    mergedRule.isPersistent = rule2.isPersistent;
+    mergedRule.gapsIn = rule2.gapsIn;
+    mergedRule.gapsOut = rule2.gapsOut;
+    mergedRule.borderSize = rule2.borderSize;
+    mergedRule.noBorder = rule2.noBorder;
+    mergedRule.noRounding = rule2.noRounding;
+    mergedRule.decorate = rule2.decorate;
+    mergedRule.noShadow = rule2.noShadow;
+    mergedRule.onCreatedEmptyRunCmd = rule2.onCreatedEmptyRunCmd;
+    mergedRule.defaultName = rule2.defaultName;
+    for (const auto& layoutopt : rule2.layoutopts) {
+        mergedRule.layoutopts[layoutopt.first] = layoutopt.second;
     }
     return mergedRule;
 }
