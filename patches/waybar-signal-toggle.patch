diff --git a/src/bar.cpp b/src/bar.cpp
index 3c3ab690..a0279217 100644
--- a/src/bar.cpp
+++ b/src/bar.cpp
@@ -413,6 +413,7 @@ void waybar::Bar::onMap(GdkEventAny* /*unused*/) {
 }
 
 void waybar::Bar::setVisible(bool value) {
+  if (value == visible) return;
   visible = value;
   if (auto mode = config.get("mode", {}); mode.isString()) {
     setMode(visible ? config["mode"].asString() : MODE_INVISIBLE);
diff --git a/src/main.cpp b/src/main.cpp
index 6e7650a9..1edee6e5 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -77,8 +77,22 @@ static void catchSignals(waybar::SafeSignal<int>& signal_handler) {
 // `true` or `false`, respectively, into `reload`.
 static void handleSignalMainThread(int signum, bool& reload) {
   if (signum >= SIGRTMIN + 1 && signum <= SIGRTMAX) {
+    std::vector<std::string> monitors = {@sortedMonitors@};
+    int action = (signum - SIGRTMIN) >> 3;
+    int monitorNum = (signum - SIGRTMIN) & ((1 << 3) - 1);
+    if (monitorNum > monitors.size() || monitorNum < 1) {
+      spdlog::error("Monitor with number {} does not exist", monitorNum);
+      return;
+    }
+    auto& monitorName = monitors[monitorNum - 1];
     for (auto& bar : waybar::Client::inst()->bars) {
-      bar->handleSignal(signum);
+      if (bar->output->name == monitorName) {
+        if (action == 2)
+          bar->toggle();
+        else
+          bar->setVisible(action);
+        break;
+      }
     }
 
     return;
